{"ast":null,"code":"var _jsxFileName = \"/home/faith/code-challenges/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BotCollection from \"./components/BotCollection\";\nimport YourBotArmy from \"./components/YourBotArmy\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]); // Fetch and store bot data\n  const [army, setArmy] = useState([]); // Store enlisted bots\n\n  // Implement functions to fetch data, enlist and release bots\n  useEffect(() => {\n    // Fetch the bot data here and update the 'bots' state\n    // You can use the fetch API, axios, or any other method to fetch data\n    // Example:\n    fetch(\"http://localhost:8001/bots\").then(response => response.json()).then(data => setBots(data)).catch(error => console.error(\"Error fetching bot data: \", error));\n  }, []);\n  const enlistBot = bot => {\n    // Implement the logic to enlist a bot into the army here\n    // You can use the 'setArmy' function to update the 'army' state\n    // Example:\n    setArmy([...army, bot]);\n  };\n  const releaseBot = bot => {\n    // Implement the logic to release a bot from the army here\n    // You can use the 'setArmy' function to update the 'army' state\n    // Example:\n    setArmy(army.filter(enlistedBot => enlistedBot.id !== bot.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bot Battlr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot,\n      releaseBot: releaseBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      army: army,\n      releaseBot: releaseBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"68vvBV/GRPK97Mw+lesffEpDxCY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","army","setArmy","fetch","then","response","json","data","catch","error","console","enlistBot","bot","releaseBot","filter","enlistedBot","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/faith/code-challenges/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BotCollection from \"./components/BotCollection\";\nimport YourBotArmy from \"./components/YourBotArmy\";\nimport \"./App.css\";\n\nfunction App() {\n  const [bots, setBots] = useState([]); // Fetch and store bot data\n  const [army, setArmy] = useState([]); // Store enlisted bots\n\n  // Implement functions to fetch data, enlist and release bots\n  useEffect(() => {\n    // Fetch the bot data here and update the 'bots' state\n    // You can use the fetch API, axios, or any other method to fetch data\n    // Example:\n    fetch(\"http://localhost:8001/bots\")\n      .then((response) => response.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.error(\"Error fetching bot data: \", error));\n  }, []);\n\n  const enlistBot = (bot) => {\n    // Implement the logic to enlist a bot into the army here\n    // You can use the 'setArmy' function to update the 'army' state\n    // Example:\n    setArmy([...army, bot]);\n  };\n\n  const releaseBot = (bot) => {\n    // Implement the logic to release a bot from the army here\n    // You can use the 'setArmy' function to update the 'army' state\n    // Example:\n    setArmy(army.filter((enlistedBot) => enlistedBot.id !== bot.id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Bot Battlr</h1>\n      <BotCollection bots={bots} enlistBot={enlistBot} releaseBot={releaseBot} />\n      <YourBotArmy army={army} releaseBot={releaseBot} />\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACAW,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,OAAO,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAIC,GAAG,IAAK;IACzB;IACA;IACA;IACAV,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEW,GAAG,CAAC,CAAC;EACzB,CAAC;EAED,MAAMC,UAAU,GAAID,GAAG,IAAK;IAC1B;IACA;IACA;IACAV,OAAO,CAACD,IAAI,CAACa,MAAM,CAAEC,WAAW,IAAKA,WAAW,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE,CAAC,CAAC;EAClE,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB1B,OAAA,CAACH,aAAa;MAACM,IAAI,EAAEA,IAAK;MAACY,SAAS,EAAEA,SAAU;MAACE,UAAU,EAAEA;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3E1B,OAAA,CAACF,WAAW;MAACO,IAAI,EAAEA,IAAK;MAACY,UAAU,EAAEA;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACxB,EAAA,CApCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}